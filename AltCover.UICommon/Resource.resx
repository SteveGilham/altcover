<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="InvalidFile" xml:space="preserve">
    <value>The file
{0}
is not a valid coverage file:
{1}</value>
  </data>
  <data name="SelectFont" xml:space="preserve">
    <value>Select font for source display</value>
  </data>
  <data name="SelectXml" xml:space="preserve">
    <value>xml files (*.xml)%xml|json files (*.json)%json|All files (*.*)%*</value>
  </data>
  <data name="aboutVisualizer.Comments" xml:space="preserve">
    <value>Coverage visualizer for NCover and OpenCover reports</value>
  </data>
  <data name="aboutVisualizer.Copyright" xml:space="preserve">
    <value>{0}
Icons from the Visual Studio 2017 collection
https://docs.microsoft.com/en-us/visualstudio/designers/the-visual-studio-image-library</value>
  </data>
  <data name="aboutVisualizer.Title" xml:space="preserve">
    <value>About AltCover Visualizer</value>
  </data>
  <data name="aboutVisualizer.WebsiteLabel" xml:space="preserve">
    <value>Visit the AltCover GitHub repo</value>
  </data>
  <data name="C_redits" xml:space="preserve">
    <value>C_redits</value>
  </data>
  <data name="gtk-close" xml:space="preserve">
    <value>_Close</value>
  </data>
  <data name="openButton.Label" xml:space="preserve">
    <value>o|_Open...</value>
  </data>
  <data name="refreshButton.Label" xml:space="preserve">
    <value>r|_Refresh</value>
  </data>
  <data name="showAboutButton.Label" xml:space="preserve">
    <value>a|_About...</value>
  </data>
  <data name="fontButton.Label" xml:space="preserve">
    <value>f|_Font...</value>
  </data>
  <data name="exitButton.Label" xml:space="preserve">
    <value>x|E_xit</value>
  </data>
  <data name="branchesVisited" xml:space="preserve">
    <value>{0} of {1} branches visited</value>
  </data>
  <data name="No source location" xml:space="preserve">
    <value>Method {0} 
has no corresponding source location</value>
  </data>
  <data name="g|geometry" xml:space="preserve">
    <value>Clear geometry</value>
  </data>
  <data name="r|recentFiles" xml:space="preserve">
    <value>Clear recent file list</value>
  </data>
  <data name="OpenFile" xml:space="preserve">
    <value>Select coverage file</value>
  </data>
  <data name="OpenFile.Open" xml:space="preserve">
    <value>_Open</value>
  </data>
  <data name="OpenFile.Cancel" xml:space="preserve">
    <value>_Cancel</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>The MIT License

Copyright {0}

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.</value>
  </data>
  <data name="AboutDialog.License" xml:space="preserve">
    <value>License</value>
  </data>
  <data name="AboutDialog.About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Visualizer" xml:space="preserve">
    <value>Visualizer</value>
  </data>
  <data name="Open Coverage File" xml:space="preserve">
    <value>Open Coverage File</value>
  </data>
  <data name="LoadWarning" xml:space="preserve">
    <value>Inconsistent Coverage File</value>
  </data>
  <data name="LoadError" xml:space="preserve">
    <value>Coverage File Load Failed</value>
  </data>
  <data name="LoadInfo" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>File not found : {0}</value>
  </data>
  <data name="FileNewerThanReport" xml:space="preserve">
    <value>File newer than report : {0}</value>
  </data>
  <data name="NotAllSourcePresent" xml:space="preserve">
    <value>Not all source files mentioned are present</value>
  </data>
  <data name="SomeSourceModified" xml:space="preserve">
    <value>Some source files have been modified since this report was created</value>
  </data>
</root>